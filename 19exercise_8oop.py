'''
üìù Exerc√≠cio: Sistema de Pagamentos Online

üîπ Enunciado

Voc√™ foi contratado para desenvolver um sistema simples para processar pagamentos online. O sistema precisa ser capaz de processar pagamentos via cart√£o de cr√©dito e PIX.

No entanto, a empresa quer reaproveitar algumas funcionalidades comuns a ambos os m√©todos de pagamento.

Seu objetivo √© criar um sistema onde:
	1.	Crie uma classe base chamada Pagamento com um m√©todo para processar um pagamento.
	2.	Crie duas classes separadas: CartaoCredito e Pix, que ter√£o m√©todos espec√≠ficos para processar cada tipo de pagamento.
	3.	Crie uma classe chamada PagamentoOnline que herde de CartaoCredito e Pix, permitindo que um pagamento online possa ser feito por qualquer um dos m√©todos.
	4.	Teste o c√≥digo, criando um objeto da classe PagamentoOnline e chamando os m√©todos de pagamento via cart√£o de cr√©dito e via PIX.

üéØ Requisitos
	‚Ä¢	Utilize heran√ßa m√∫ltipla para que PagamentoOnline tenha os m√©todos tanto de CartaoCredito quanto de Pix.
	‚Ä¢	O m√©todo processar_pagamento() da classe base Pagamento pode apenas exibir uma mensagem gen√©rica.
	‚Ä¢	Cada classe derivada (CartaoCredito e Pix) deve ter seu pr√≥prio m√©todo para processar o pagamento de forma diferente.
'''

class Pagamento:
    @staticmethod
    def processar_pagamento():
        print('Processando pagamento...')

class CartaoCredito(Pagamento):
    @staticmethod
    def pagar_cartao():
        print(f'{Pagamento.processar_pagamento()}\nPagamento via Cart√£o de cr√©dito realizado com sucesso.')

class Pix(Pagamento):
    @staticmethod
    def pagar_pix():
        print(f'{Pagamento.processar_pagamento()}\nPagamento via pix realizado com sucesso.')

class PagamentoOnline(CartaoCredito, Pix):
    pass

compra = PagamentoOnline.pagar_cartao()

