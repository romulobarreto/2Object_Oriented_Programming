'''
üìå O que s√£o M√©todos Est√°ticos?
	‚Ä¢	M√©todos est√°ticos pertencem √† classe, mas n√£o t√™m acesso direto a atributos da classe ou da inst√¢ncia.
	‚Ä¢	Eles s√£o definidos com @staticmethod.
	‚Ä¢	N√£o recebem self nem cls como primeiro argumento.
	‚Ä¢	S√£o usados quando o comportamento n√£o depende de atributos da classe ou da inst√¢ncia.
	‚Ä¢	Servem para fun√ß√µes auxiliares que fazem sentido dentro da classe, mas que n√£o precisam modificar ou acessar a classe diretamente.
'''
class MathUtils:
    """
    A class containing static methods for mathematical operations.
    """

    @staticmethod
    def add(a, b):
        """
        Adds two numbers.
        """
        return a + b

    @staticmethod
    def subtract(a, b):
        """
        Subtracts two numbers.
        """
        return a - b

    @staticmethod
    def multiply(a, b):
        """
        Multiplies two numbers.
        """
        return a * b

    @staticmethod
    def divide(a, b):
        """
        Divides two numbers. Returns None if division by zero occurs.
        """
        if b == 0:
            print("‚ö†Ô∏è Cannot divide by zero!")
            return None
        return a / b

# ==== TESTING THE CLASS ====
if __name__ == "__main__":
    print("üî¢ Math Operations using Static Methods:\n")

    print(f"‚ûï Addition: 10 + 5 = {MathUtils.add(10, 5)}")
    print(f"‚ûñ Subtraction: 10 - 5 = {MathUtils.subtract(10, 5)}")
    print(f"‚úñÔ∏è Multiplication: 10 * 5 = {MathUtils.multiply(10, 5)}")
    print(f"‚ûó Division: 10 / 5 = {MathUtils.divide(10, 5)}")

    print(f"‚ö†Ô∏è Trying to divide by zero: {MathUtils.divide(10, 0)}")

'''
üìå Explica√ß√£o do C√≥digo
	1.	Criamos a classe MathUtils que cont√©m apenas m√©todos est√°ticos para opera√ß√µes matem√°ticas.
	2.	Usamos @staticmethod para definir m√©todos que n√£o dependem da classe nem da inst√¢ncia.
	3.	Criamos m√©todos matem√°ticos b√°sicos:
	‚Ä¢	add(a, b): soma dois n√∫meros.
	‚Ä¢	subtract(a, b): subtrai dois n√∫meros.
	‚Ä¢	multiply(a, b): multiplica dois n√∫meros.
	‚Ä¢	divide(a, b): divide dois n√∫meros, com tratamento para divis√£o por zero.
	4.	Testamos a classe no bloco if __name__ == "__main__": chamando diretamente os m√©todos.
	5.	Os m√©todos s√£o chamados diretamente da classe, sem precisar criar inst√¢ncias.

üìå Quando usar M√©todos Est√°ticos?

‚úÖ Quando a fun√ß√£o n√£o depende de atributos da classe ou da inst√¢ncia.
‚úÖ Quando queremos organizar fun√ß√µes dentro de uma classe para manter a estrutura do c√≥digo limpa.
‚úÖ Quando queremos evitar a necessidade de criar uma inst√¢ncia s√≥ para usar um m√©todo.
'''