'''
üìå Cen√°rio:

Vamos criar um sistema de cadastro de funcion√°rios em uma empresa. Cada funcion√°rio ter√° nome, cargo e sal√°rio. Usaremos o m√©todo construtor (__init__) para inicializar os atributos corretamente ao criar um novo funcion√°rio.

üìù Planejamento (Passo a Passo):
	1.	Criar a classe Employee (Funcion√°rio).
	2.	Definir o m√©todo construtor (__init__) para inicializar nome, cargo e sal√°rio.
	3.	Criar um m√©todo display_info() para exibir os dados do funcion√°rio.
	4.	Testar criando alguns funcion√°rios e chamando os m√©todos.
'''

# Filename: constructor_method.py

class Employee:
    """Represents an employee in a company."""

    def __init__(self, name, position, salary):
        """
        Constructor method to initialize an employee.

        :param name: Employee's name.
        :param position: Employee's position.
        :param salary: Employee's salary.
        """
        self.name = name
        self.position = position
        self.salary = salary

    def display_info(self):
        """Displays employee information."""
        print(f"üë§ Employee: {self.name} | üè¢ Position: {self.position} | üí∞ Salary: ${self.salary:.2f}")


# ==== TESTING THE CLASS ====
if __name__ == "__main__":
    # Creating employees using the constructor
    emp1 = Employee("Alice Johnson", "Software Engineer", 75000)
    emp2 = Employee("Bob Smith", "Data Analyst", 65000)
    emp3 = Employee("Charlie Brown", "HR Manager", 70000)

    # Displaying employee information
    emp1.display_info()
    emp2.display_info()
    emp3.display_info()